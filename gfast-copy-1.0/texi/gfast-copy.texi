\input texinfo   @c -*-texinfo-*-
@c %**start of header
@setfilename gfast-copy.info
@documentencoding UTF-8
@ifinfo
@*Generated by Sphinx 1.5.3.@*
@end ifinfo
@settitle gfast-copy Documentation
@defindex ge
@paragraphindent 0
@exampleindent 4
@finalout
@dircategory Miscellaneous
@direntry
* gfast-copy: (gfast-copy.info). One line description of project.
@end direntry

@definfoenclose strong,`,'
@definfoenclose emph,`,'
@c %**end of header

@copying
@quotation
gfast-copy 1.0, Oct 19, 2017

Brüggemann Eddie

Copyright @copyright{} 2017, Brüggemann Eddie
@end quotation

@end copying

@titlepage
@title gfast-copy Documentation
@insertcopying
@end titlepage
@contents

@c %** start of user preamble

@c %** end of user preamble

@ifnottex
@node Top
@top gfast-copy Documentation
@insertcopying
@end ifnottex

@c %**start of body
@anchor{index doc}@anchor{0}
@c gfast-copy documentation master file, created by
@c sphinx-quickstart on Thu Sep 28 22:52:20 2017.
@c You can adapt this file completely to your liking, but it should at least
@c contain the root `toctree` directive.

@c Copyright (c) Brüggemann Eddie.

@c Permission is granted to copy, distribute and/or modify this document

@c under the terms of the GNU Free Documentation License, Version 1.3

@c or any later version published by the Free Software Foundation;

@c with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.

@c A copy of the license is included in the section entitled "GNU

@c Free Documentation License".

@menu
* gfast-copy:: 
* fast-copy:: 
* Index:: 

@detailmenu
 --- The Detailed Node Listing ---

gfast-copy

* Introduction:: 
* Graphical User Interface description:: 
* NOTE:: 
* Credits:: 
* License:: 

Graphical User Interface description

* Interface:: 
* Menu bar:: 

Credits

* Windows *.exe file: Windows * exe file. 

fast-copy

* fast-copy command-line tool:: 
* Options:: 
* How does the algorithm work:: 
* Wrapper script:: 
* Copyright:: 

@end detailmenu
@end menu

@node gfast-copy,fast-copy,Top,Top
@anchor{gfast-copy welcome-to-gfast-copy-s-documentation}@anchor{1}@anchor{gfast-copy gfast-copy}@anchor{2}@anchor{gfast-copy doc}@anchor{3}
@chapter gfast-copy


@*program: 
@code{gfast-copy} (a graphical fast chunk file copy program.)


@*author: 
Eddie Brüggemann <@email{mrcyberfighter@@gmail.com}>


@*language: 
@strong{C}


@*version: 
1.0


@*release: 
Oct 19, 2017


@menu
* Introduction:: 
* Graphical User Interface description:: 
* NOTE:: 
* Credits:: 
* License:: 

@end menu

@node Introduction,Graphical User Interface description,,gfast-copy
@anchor{gfast-copy introduction}@anchor{4}
@section Introduction


@code{gfast-copy} stands for @strong{Graphical} @strong{Fast} @strong{Copy} and it is build on a @ref{5,,very fast copying algorithm}.

@cartouche
@quotation Note 
This tool is implemented into the UNIX spirit:

A single program which can do an unique task but do it well.

It copy a single file to a destination in a practice way.

As fast as it can !!!
@end quotation
@end cartouche

@code{gfast-copy} only provides a graphical interface for the @code{fast-copy} command-line tool,

that I have implement. Which can copy a file like a film (Around @code{700} @strong{Mo}) in few seconds.

@cartouche
@quotation Note 
I have implement it because I often copy videos from a location to another:

Per example from the folder named @code{ToWatch} to the folder @code{Seen}.

Or *.iso images from the folder @code{Download} to the folder @code{ISO_Collection}.

Because the @abbr{O.S,Operating System} can be slow by chunk copy operations.
@end quotation
@end cartouche

@node Graphical User Interface description,NOTE,Introduction,gfast-copy
@anchor{gfast-copy graphical-user-interface-description}@anchor{6}
@section Graphical User Interface description


@menu
* Interface:: 
* Menu bar:: 

@end menu

@node Interface,Menu bar,,Graphical User Interface description
@anchor{gfast-copy interface}@anchor{7}
@subsection Interface


You get to verticaly align buttons:


@enumerate 

@item 
@code{Source}

@item 
@code{Destination}
@end enumerate

Use the @code{Source} labeled button to set @emph{the file to copy} Source (@code{Ctrl + S}).

@quotation

This will display the @emph{basename} of the file to copy @emph{onto the button}.
@end quotation

Use the @code{Destination} labeled button to set @emph{the file destination} Destination (@code{Ctrl + D}).

@quotation

This will display the basename you have choose for the destination file.
@end quotation

And at they are 2 icons buttons:


@itemize +

@item 
Remove source file toggle button (@code{Ctrl + R}).

@item 
Run copying (@code{Ctrl + Return}).
@end itemize

@*note: 
Take a look at my self-builded GtkSmartIconButton widgets.


Once the copying done, the button contains their original string and icons.

@node Menu bar,,Interface,Graphical User Interface description
@anchor{gfast-copy menu-bar}@anchor{8}
@subsection Menu bar


You get a menu bar too with few menu buttons.


@enumerate 

@item 
Files
@end enumerate

@quotation


@itemize +

@item 
Files --> Set source file (@code{Ctrl + S}).

@item 
Files --> Set destination file (@code{Ctrl + D}).

@item 
Files --> Run copying (@code{Ctrl + Return}).

@item 
Quit (@code{Ctrl + Q}).
@end itemize
@end quotation


@enumerate 2

@item 
Configuration
@end enumerate

@quotation


@itemize +

@item 
Configuration --> Light theme.

@item 
Configuration --> Dark theme.
@end itemize

these are radiobuttons to choose your theming.


@itemize +

@item 
Configuration --> Delete source file (@code{Ctrl + R}).
@end itemize
@end quotation


@enumerate 3

@item 
Info ?
@end enumerate

@quotation


@itemize +

@item 
Info ? --> Read me (@code{Ctrl + N}).

@item 
Info ? --> About (@code{Ctrl + A}).
@end itemize
@end quotation

@node NOTE,Credits,Graphical User Interface description,gfast-copy
@anchor{gfast-copy note}@anchor{9}
@section NOTE


I have implement this tool for my personal requirement: good by Hollywood !

So if you think your system is too slow by copying chunk (big) files use (g)fast-copy !

@node Credits,License,NOTE,gfast-copy
@anchor{gfast-copy credits}@anchor{a}
@section Credits


Thanks to my beloved mother, my family and the doctors.

Stay away from drugs drugs destroy your brain and your life.

@menu
* Windows *.exe file: Windows * exe file. 

@end menu

@node Windows * exe file,,,Credits
@anchor{gfast-copy windows-exe-file}@anchor{b}
@subsection Windows *.exe file


Thanks to the gnome-bugzilla team which help to provide you a version of (g)fast-copy.

Without their help only the MSYS2 and Cygwin users would be able to launch (g)fast-copy.

@node License,,Credits,gfast-copy
@anchor{gfast-copy license}@anchor{c}
@section License


@example
gfast-copy an easy to use graphical fast copy tool for big files.

Copyright (C) 2017 Brüggemann Eddie.

This file is part of gfast-copy.
gfast-copy is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

gfast-copy is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with gfast-copy. If not, see <http://www.gnu.org/licenses/>
@end example

@c Copyright (c) Brüggemann Eddie.

@c Permission is granted to copy, distribute and/or modify this document

@c under the terms of the GNU Free Documentation License, Version 1.3

@c or any later version published by the Free Software Foundation;

@c with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.

@c A copy of the license is included in the section entitled "GNU

@c Free Documentation License".

@node fast-copy,Index,gfast-copy,Top
@anchor{fast-copy fast-copy}@anchor{d}@anchor{fast-copy doc}@anchor{e}@anchor{fast-copy id1}@anchor{f}
@chapter fast-copy


@*program: 
@code{fast-copy} (a fast chunk file copy program).


@*author: 
Eddie Brüggemann <@email{mrcyberfighter@@gmail.com}>


@*language: 
@strong{C}


@*version: 
1.0


@*release: 
Oct 19, 2017


@menu
* fast-copy command-line tool:: 
* Options:: 
* How does the algorithm work:: 
* Wrapper script:: 
* Copyright:: 

@end menu

@node fast-copy command-line tool,Options,,fast-copy
@anchor{fast-copy fast-copy-command-line-tool}@anchor{10}
@section fast-copy command-line tool


@code{fast-copy} is a @strong{command-line tool} which can work in 2 different fashions:


@itemize +

@item 
Using @abbr{syscall's,System Calls}.

@item 
Using a @code{FILE} @emph{streams} pointer.
@end itemize

@*note: 
Per default it make usage of the file streams.


@code{fast-copy} determine the best buffer size and then process displaying a fancy progress-bar if needed into the terminal.

Fast copy takes at least 2 argument the source and the destination to copy the file on @strong{GNU}/@strong{Linux} and @strong{MacOSX}.

@*windows: 
The command-line tool is available under @strong{Windows} using only the @emph{file streams} and no @strong{progress-bar} feature is provided.


@node Options,How does the algorithm work,fast-copy command-line tool,fast-copy
@anchor{fast-copy options}@anchor{11}
@section Options


@example
$ fast-copy -h
fast-copy - a fast chunk file copy program.

Usage : fast-copy -r input-file -w output-file [-o] [-e] [-s] [-h]

        -r Read from file (required).
        -w Write to file  (required).
        -o Overwrite destination file (optional).
        -e Erase source file (optional).
        -s Use syscalls instead of streams (optional only UNIX).
        -h Print this help message.

- Copyright (©) 2017 Brüggemann Eddie <mrcyberfighter@@gmail.com> GPLv3.
$
@end example

---

@geindex command line option; -r
@anchor{fast-copy cmdoption-r}@anchor{12}
@deffn {Option} @w{-}r

-r (read from file) --> Input file (required).
@end deffn

@geindex command line option; -w
@anchor{fast-copy cmdoption-w}@anchor{13}
@deffn {Option} @w{-}w

-w (write to file)  --> Output file (required).
@end deffn

@geindex command line option; -o
@anchor{fast-copy cmdoption-o}@anchor{14}
@deffn {Option} @w{-}o

-o (overwrite) --> Overwrite destination file (optional).
@end deffn

@geindex command line option; -e
@anchor{fast-copy cmdoption-e}@anchor{15}
@deffn {Option} @w{-}e

-e (erase) --> Erase source file (optional).
@end deffn

@geindex command line option; -s
@anchor{fast-copy cmdoption-s}@anchor{16}
@deffn {Option} @w{-}s

-s (syscalls) --> Use syscall instead of streams (optional only UNIX).
@end deffn

@geindex command line option; -h
@anchor{fast-copy cmdoption-h}@anchor{17}
@deffn {Option} @w{-}h

-h (help) -> Print help message.
@end deffn

---

The default behavior is to copy @emph{source} to @emph{destination} file using @strong{file stream}, which you can change using the -s switch on UNIX systems.

If the destination file exists @code{fast-copy} will ask interactively what to do: overwrite or not the file.

The progress bar is only displayed for files greater than : @code{sizeof_file > (blocksize * 8 * 16 * 16)}

This value mean to be @code{16 Mio} using @strong{syscalls} or using @strong{file streams} on my system.

@*note: 
The @code{blocksize} is computed to get the best buffer size: the number of bytes by the copying operation an,d is system dependent.


Finally @code{fast-copy} will synchronize the file system.

---

You can inhibit the interactive overwriting questioning by using th -o > (overwrite) switch.

---

You can tell program:@cite{fast-copy} to use syscalls (open, read and write) using the -s --> (syscall) switch.

To know that by every @strong{blocksize} copy a @abbr{syscall,System Call} will be made by handle by the @strong{kernel}.

Else @strong{file streams} are buffered operations avoiding calling @abbr{syscall} to often.

---

You can tell @code{fast-copy} to erase the source file once the copy work done using the -e -> (erase) switch.

@node How does the algorithm work,Wrapper script,Options,fast-copy
@anchor{fast-copy how-does-the-algorithm-work}@anchor{18}@anchor{fast-copy fast-copy-algorithm}@anchor{5}
@section How does the algorithm work



@enumerate 

@item 
At first it will check for the best buffer size.
@end enumerate

@cartouche
@quotation Note 

@itemize +

@item 
Using file streams: it will look up the @code{BUFSIZ} constant if it's great enough else the program set it to 8192 octets.

@item 
Using syscalls it will look up the the @code{st_blocksize} from the @code{stat()} function and set it as buffer size.
@end itemize
@end quotation
@end cartouche


@enumerate 2

@item 
Then it will define a buffer with the optimal size.

@item 
It will copy the source file to the destination in a loop using the defined buffer.

@item 
Finally it will synchronize the file-system using @code{fflush()} or @code{fsync()}.
@end enumerate

@node Wrapper script,Copyright,How does the algorithm work,fast-copy
@anchor{fast-copy wrapper-script}@anchor{19}
@section Wrapper script


You can build a wrapper script around the @code{fast-copy} command-line tool,

per example using @code{zenity}, @code{xclip} or like, to get the first argument.

And for the second you need a tool which provides a file-chooser.

As like this one, using zenity and nautilus-action:

@example
#! /bin/bash

###############################################################
# Wrapper for fast-copy using zenity and nautilus-actions for #
# speed up the file copying.                                  #
###############################################################

function usage() @{

  echo "usage $(basename $0) -r input-file -w output-file [-o] [-s] [-e] [-h]" ;

  exit 1 ;
@}

if [[ $# -ne 1 ]] ; then

  # The first argument is given from nautilus-actions.

  usage ;

fi

destination=`zenity --file-selection --save --confirm-overwrite --filename="$(basename "$@{1@}")"`

# Here the source file comes from nautilus action i.e
# the contextual gnome-desktop add-on nautilus-actions
source_filepath=$@{1@}

if [[ -n "$@{destination@}" ]] ; then

  fast-copy -r "$@{source_filepath@}" -w "$@{destination@}" -o

  zenity --info --text="Copy completed" --no-wrap --no-markup

fi

exit 0
@end example

@node Copyright,,Wrapper script,fast-copy
@anchor{fast-copy copyright}@anchor{1a}
@section Copyright


@example
fast-copy - a fast single chunk file copy program.

Copyright (C) 2017 Brüggemann Eddie.

This file is part of fast-copy.
fast-copy is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

fast-copy is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with gfast-copy. If not, see <http://www.gnu.org/licenses/>
@end example

@node Index,,fast-copy,Top
@unnumbered Index


@printindex ge


@c %**end of body
@bye
