This is gfast-copy.info, produced by makeinfo version 6.3 from
gfast-copy.texi.

     gfast-copy 1.0, Oct 19, 2017

     Brüggemann Eddie

     Copyright © 2017, Brüggemann Eddie

INFO-DIR-SECTION Miscellaneous
START-INFO-DIR-ENTRY
* gfast-copy: (gfast-copy.info). One line description of project.
END-INFO-DIR-ENTRY


   Generated by Sphinx 1.5.3.


File: gfast-copy.info,  Node: Top,  Next: gfast-copy,  Up: (dir)

gfast-copy Documentation
************************

     gfast-copy 1.0, Oct 19, 2017

     Brüggemann Eddie

     Copyright © 2017, Brüggemann Eddie

* Menu:

* gfast-copy:: 
* fast-copy:: 
* Index:: 

 — The Detailed Node Listing —

gfast-copy

* Introduction:: 
* Graphical User Interface description:: 
* NOTE:: 
* Credits:: 
* License:: 

Graphical User Interface description

* Interface:: 
* Menu bar:: 

Credits

* Windows *.exe file: Windows * exe file. 

fast-copy

* fast-copy command-line tool:: 
* Options:: 
* How does the algorithm work:: 
* Wrapper script:: 
* Copyright:: 



File: gfast-copy.info,  Node: gfast-copy,  Next: fast-copy,  Prev: Top,  Up: Top

1 gfast-copy
************


program: ‘gfast-copy’ (a graphical fast chunk file copy program.)


author: Eddie Brüggemann <<mrcyberfighter@gmail.com>>


language: `C'


version: 1.0


release: Oct 19, 2017

* Menu:

* Introduction:: 
* Graphical User Interface description:: 
* NOTE:: 
* Credits:: 
* License:: 


File: gfast-copy.info,  Node: Introduction,  Next: Graphical User Interface description,  Up: gfast-copy

1.1 Introduction
================

‘gfast-copy’ stands for `Graphical' `Fast' `Copy' and it is build on a
*note very fast copying algorithm: 5.

     Note: This tool is implemented into the UNIX spirit:

     A single program which can do an unique task but do it well.

     It copy a single file to a destination in a practice way.

     As fast as it can !!!

‘gfast-copy’ only provides a graphical interface for the ‘fast-copy’
command-line tool,

that I have implement.  Which can copy a file like a film (Around ‘700’
`Mo') in few seconds.

     Note: I have implement it because I often copy videos from a
     location to another:

     Per example from the folder named ‘ToWatch’ to the folder ‘Seen’.

     Or *.iso images from the folder ‘Download’ to the folder
     ‘ISO_Collection’.

     Because the O.S (Operating System) can be slow by chunk copy
     operations.


File: gfast-copy.info,  Node: Graphical User Interface description,  Next: NOTE,  Prev: Introduction,  Up: gfast-copy

1.2 Graphical User Interface description
========================================

* Menu:

* Interface:: 
* Menu bar:: 


File: gfast-copy.info,  Node: Interface,  Next: Menu bar,  Up: Graphical User Interface description

1.2.1 Interface
---------------

You get to verticaly align buttons:

  1. ‘Source’

  2. ‘Destination’

Use the ‘Source’ labeled button to set `the file to copy' Source (‘Ctrl
+ S’).

     This will display the `basename' of the file to copy `onto the
     button'.

Use the ‘Destination’ labeled button to set `the file destination'
Destination (‘Ctrl + D’).

     This will display the basename you have choose for the destination
     file.

And at they are 2 icons buttons:

   + Remove source file toggle button (‘Ctrl + R’).

   + Run copying (‘Ctrl + Return’).


note: Take a look at my self-builded GtkSmartIconButton widgets.

Once the copying done, the button contains their original string and
icons.


File: gfast-copy.info,  Node: Menu bar,  Prev: Interface,  Up: Graphical User Interface description

1.2.2 Menu bar
--------------

You get a menu bar too with few menu buttons.

  1. Files

        + Files –> Set source file (‘Ctrl + S’).

        + Files –> Set destination file (‘Ctrl + D’).

        + Files –> Run copying (‘Ctrl + Return’).

        + Quit (‘Ctrl + Q’).

  2. Configuration

        + Configuration –> Light theme.

        + Configuration –> Dark theme.

     these are radiobuttons to choose your theming.

        + Configuration –> Delete source file (‘Ctrl + R’).

  3. Info ?

        + Info ?  –> Read me (‘Ctrl + N’).

        + Info ?  –> About (‘Ctrl + A’).


File: gfast-copy.info,  Node: NOTE,  Next: Credits,  Prev: Graphical User Interface description,  Up: gfast-copy

1.3 NOTE
========

I have implement this tool for my personal requirement: good by
Hollywood !

So if you think your system is too slow by copying chunk (big) files use
(g)fast-copy !


File: gfast-copy.info,  Node: Credits,  Next: License,  Prev: NOTE,  Up: gfast-copy

1.4 Credits
===========

Thanks to my beloved mother, my family and the doctors.

Stay away from drugs drugs destroy your brain and your life.

* Menu:

* Windows *.exe file: Windows * exe file. 


File: gfast-copy.info,  Node: Windows * exe file,  Up: Credits

1.4.1 Windows *.exe file
------------------------

Thanks to the gnome-bugzilla team which help to provide you a version of
(g)fast-copy.

Without their help only the MSYS2 and Cygwin users would be able to
launch (g)fast-copy.


File: gfast-copy.info,  Node: License,  Prev: Credits,  Up: gfast-copy

1.5 License
===========

     gfast-copy an easy to use graphical fast copy tool for big files.

     Copyright (C) 2017 Brüggemann Eddie.

     This file is part of gfast-copy.
     gfast-copy is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.

     gfast-copy is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
     GNU General Public License for more details.

     You should have received a copy of the GNU General Public License
     along with gfast-copy. If not, see <http://www.gnu.org/licenses/>


File: gfast-copy.info,  Node: fast-copy,  Next: Index,  Prev: gfast-copy,  Up: Top

2 fast-copy
***********


program: ‘fast-copy’ (a fast chunk file copy program).


author: Eddie Brüggemann <<mrcyberfighter@gmail.com>>


language: `C'


version: 1.0


release: Oct 19, 2017

* Menu:

* fast-copy command-line tool:: 
* Options:: 
* How does the algorithm work:: 
* Wrapper script:: 
* Copyright:: 


File: gfast-copy.info,  Node: fast-copy command-line tool,  Next: Options,  Up: fast-copy

2.1 fast-copy command-line tool
===============================

‘fast-copy’ is a `command-line tool' which can work in 2 different
fashions:

   + Using syscall’s (System Calls).

   + Using a ‘FILE’ `streams' pointer.


note: Per default it make usage of the file streams.

‘fast-copy’ determine the best buffer size and then process displaying a
fancy progress-bar if needed into the terminal.

Fast copy takes at least 2 argument the source and the destination to
copy the file on `GNU'/`Linux' and `MacOSX'.


windows: The command-line tool is available under `Windows' using only
the `file streams' and no `progress-bar' feature is provided.


File: gfast-copy.info,  Node: Options,  Next: How does the algorithm work,  Prev: fast-copy command-line tool,  Up: fast-copy

2.2 Options
===========

     $ fast-copy -h
     fast-copy - a fast chunk file copy program.

     Usage : fast-copy -r input-file -w output-file [-o] [-e] [-s] [-h]

             -r Read from file (required).
             -w Write to file  (required).
             -o Overwrite destination file (optional).
             -e Erase source file (optional).
             -s Use syscalls instead of streams (optional only UNIX).
             -h Print this help message.

     - Copyright (©) 2017 Brüggemann Eddie <mrcyberfighter@gmail.com> GPLv3.
     $

—

 -- Option: -r

     -r (read from file) –> Input file (required).

 -- Option: -w

     -w (write to file) –> Output file (required).

 -- Option: -o

     -o (overwrite) –> Overwrite destination file (optional).

 -- Option: -e

     -e (erase) –> Erase source file (optional).

 -- Option: -s

     -s (syscalls) –> Use syscall instead of streams (optional only
     UNIX).

 -- Option: -h

     -h (help) -> Print help message.

—

The default behavior is to copy `source' to `destination' file using
`file stream', which you can change using the -s switch on UNIX systems.

If the destination file exists ‘fast-copy’ will ask interactively what
to do: overwrite or not the file.

The progress bar is only displayed for files greater than : ‘sizeof_file
> (blocksize * 8 * 16 * 16)’

This value mean to be ‘16 Mio’ using `syscalls' or using `file streams'
on my system.


note: The ‘blocksize’ is computed to get the best buffer size: the
number of bytes by the copying operation an,d is system dependent.

Finally ‘fast-copy’ will synchronize the file system.

—

You can inhibit the interactive overwriting questioning by using th -o >
(overwrite) switch.

—

You can tell program:‘fast-copy’ to use syscalls (open, read and write)
using the -s –> (syscall) switch.

To know that by every `blocksize' copy a syscall (System Call) will be
made by handle by the `kernel'.

Else `file streams' are buffered operations avoiding calling syscall to
often.

—

You can tell ‘fast-copy’ to erase the source file once the copy work
done using the -e -> (erase) switch.


File: gfast-copy.info,  Node: How does the algorithm work,  Next: Wrapper script,  Prev: Options,  Up: fast-copy

2.3 How does the algorithm work
===============================

  1. At first it will check for the best buffer size.

     Note: 
        + Using file streams: it will look up the ‘BUFSIZ’ constant if
          it’s great enough else the program set it to 8192 octets.

        + Using syscalls it will look up the the ‘st_blocksize’ from the
          ‘stat()’ function and set it as buffer size.

  2. Then it will define a buffer with the optimal size.

  3. It will copy the source file to the destination in a loop using the
     defined buffer.

  4. Finally it will synchronize the file-system using ‘fflush()’ or
     ‘fsync()’.


File: gfast-copy.info,  Node: Wrapper script,  Next: Copyright,  Prev: How does the algorithm work,  Up: fast-copy

2.4 Wrapper script
==================

You can build a wrapper script around the ‘fast-copy’ command-line tool,

per example using ‘zenity’, ‘xclip’ or like, to get the first argument.

And for the second you need a tool which provides a file-chooser.

As like this one, using zenity and nautilus-action:

     #! /bin/bash

     ###############################################################
     # Wrapper for fast-copy using zenity and nautilus-actions for #
     # speed up the file copying.                                  #
     ###############################################################

     function usage() {

       echo "usage $(basename $0) -r input-file -w output-file [-o] [-s] [-e] [-h]" ;

       exit 1 ;
     }

     if [[ $# -ne 1 ]] ; then

       # The first argument is given from nautilus-actions.

       usage ;

     fi

     destination=`zenity --file-selection --save --confirm-overwrite --filename="$(basename "${1}")"`

     # Here the source file comes from nautilus action i.e
     # the contextual gnome-desktop add-on nautilus-actions
     source_filepath=${1}

     if [[ -n "${destination}" ]] ; then

       fast-copy -r "${source_filepath}" -w "${destination}" -o

       zenity --info --text="Copy completed" --no-wrap --no-markup

     fi

     exit 0


File: gfast-copy.info,  Node: Copyright,  Prev: Wrapper script,  Up: fast-copy

2.5 Copyright
=============

     fast-copy - a fast single chunk file copy program.

     Copyright (C) 2017 Brüggemann Eddie.

     This file is part of fast-copy.
     fast-copy is free software: you can redistribute it and/or modify
     it under the terms of the GNU General Public License as published by
     the Free Software Foundation, either version 3 of the License, or
     (at your option) any later version.

     fast-copy is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
     GNU General Public License for more details.

     You should have received a copy of the GNU General Public License
     along with gfast-copy. If not, see <http://www.gnu.org/licenses/>


File: gfast-copy.info,  Node: Index,  Prev: fast-copy,  Up: Top

Index
*****

 [index ]
* Menu:

* command line option; -e:               Options.              (line 35)
* command line option; -h:               Options.              (line 44)
* command line option; -o:               Options.              (line 31)
* command line option; -r:               Options.              (line 23)
* command line option; -s:               Options.              (line 39)
* command line option; -w:               Options.              (line 27)



Tag Table:
Node: Top353
Ref: index doc574
Ref: 0574
Node: gfast-copy1019
Ref: gfast-copy welcome-to-gfast-copy-s-documentation1103
Ref: 11103
Ref: gfast-copy gfast-copy1103
Ref: 21103
Ref: gfast-copy doc1103
Ref: 31103
Node: Introduction1420
Ref: gfast-copy introduction1528
Ref: 41528
Node: Graphical User Interface description2442
Ref: gfast-copy graphical-user-interface-description2563
Ref: 62563
Node: Interface2685
Ref: gfast-copy interface2788
Ref: 72788
Node: Menu bar3534
Ref: gfast-copy menu-bar3637
Ref: 83637
Node: NOTE4271
Ref: gfast-copy note4387
Ref: 94387
Node: Credits4572
Ref: gfast-copy credits4659
Ref: a4659
Node: Windows * exe file4856
Ref: gfast-copy windows-exe-file4922
Ref: b4922
Node: License5151
Ref: gfast-copy license5225
Ref: c5225
Node: fast-copy6058
Ref: fast-copy fast-copy6144
Ref: d6144
Ref: fast-copy doc6144
Ref: e6144
Ref: fast-copy id16144
Ref: f6144
Node: fast-copy command-line tool6466
Ref: fast-copy fast-copy-command-line-tool6559
Ref: 106559
Node: Options7222
Ref: fast-copy options7351
Ref: 117351
Ref: fast-copy cmdoption-r7910
Ref: 127910
Ref: fast-copy cmdoption-w7980
Ref: 137980
Ref: fast-copy cmdoption-o8050
Ref: 148050
Ref: fast-copy cmdoption-e8131
Ref: 158131
Ref: fast-copy cmdoption-s8199
Ref: 168199
Ref: fast-copy cmdoption-h8298
Ref: 178298
Node: How does the algorithm work9525
Ref: fast-copy how-does-the-algorithm-work9641
Ref: 189641
Ref: fast-copy fast-copy-algorithm9641
Ref: 59641
Node: Wrapper script10303
Ref: fast-copy wrapper-script10421
Ref: 1910421
Node: Copyright11734
Ref: fast-copy copyright11816
Ref: 1a11816
Node: Index12635

End Tag Table


Local Variables:
coding: utf-8
End:
